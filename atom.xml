<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吾途 - Studeyang.tech</title>
  <icon>https://technotes.oss-cn-shenzhen.aliyuncs.com/2023/202305212017244.png</icon>
  <subtitle>技术半生</subtitle>
  <link href="https://studeyang.tech/atom.xml" rel="self"/>
  
  <link href="https://studeyang.tech/"/>
  <updated>2023-07-14T01:47:11.662Z</updated>
  <id>https://studeyang.tech/</id>
  
  <author>
    <name>Studeyang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>今日算法03-替换空格</title>
    <link href="https://studeyang.tech/2023/0717.html"/>
    <id>https://studeyang.tech/2023/0717.html</id>
    <published>2023-07-17T01:00:00.000Z</published>
    <updated>2023-07-14T01:47:11.662Z</updated>
    
    
    <summary type="html">将一个字符串中的空格替换成 &quot;%20&quot;。</summary>
    
    
    
    <category term="今日算法" scheme="https://studeyang.tech/categories/%E4%BB%8A%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="LeetCode" scheme="https://studeyang.tech/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>今日算法02-二维数组中的查找</title>
    <link href="https://studeyang.tech/2023/0714.html"/>
    <id>https://studeyang.tech/2023/0714.html</id>
    <published>2023-07-14T01:00:00.000Z</published>
    <updated>2023-07-14T01:47:11.658Z</updated>
    
    
    <summary type="html">在一个 n * m 的二维数组中，每一行都按照从左到右递增排序，每一列也按照从上到下递增排序。给定一个数，判断这个数是否在该二维数组中。</summary>
    
    
    
    <category term="今日算法" scheme="https://studeyang.tech/categories/%E4%BB%8A%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="LeetCode" scheme="https://studeyang.tech/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>今日算法01-数组中重复的数字</title>
    <link href="https://studeyang.tech/2023/0712.html"/>
    <id>https://studeyang.tech/2023/0712.html</id>
    <published>2023-07-12T01:00:00.000Z</published>
    <updated>2023-07-14T01:47:11.657Z</updated>
    
    
    <summary type="html">在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</summary>
    
    
    
    <category term="今日算法" scheme="https://studeyang.tech/categories/%E4%BB%8A%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="LeetCode" scheme="https://studeyang.tech/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>MySQL如何清理数据并释放磁盘空间</title>
    <link href="https://studeyang.tech/2023/15.html"/>
    <id>https://studeyang.tech/2023/15.html</id>
    <published>2023-07-11T01:00:00.000Z</published>
    <updated>2023-07-12T01:13:21.533Z</updated>
    
    
    <summary type="html">在我们的生产环境中有一张表：courier_consume_fail_message，是存放消息消费失败的数据的，设计之初，这张表的数据量评估在万级别以下，因此没有建立索引。但目前发现，该表的数据量已经达到百万级别，原因产生了大量的重试消费，这导致了该表的慢查询。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="MySQL" scheme="https://studeyang.tech/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>谈代码的粗放与精益</title>
    <link href="https://studeyang.tech/2023/14.html"/>
    <id>https://studeyang.tech/2023/14.html</id>
    <published>2023-07-06T01:00:00.000Z</published>
    <updated>2023-07-10T07:15:27.834Z</updated>
    
    
    <summary type="html">几年前，我给团队负责的整个系统写过一些公共库，有一次同事发现这个库里存在一个 Bug，并告诉了我出错的现象。然后我便去修复这个 Bug，最终只修改了一行代码，但发现一上午就这么过去了。我认真地思考了这个问题，开始认识到我的编程方式和习惯在那几年已经慢慢发生了变化，形成了明显的两个阶段的转变。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="编程" scheme="https://studeyang.tech/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Git如何修改历史的Commit信息</title>
    <link href="https://studeyang.tech/2023/13.html"/>
    <id>https://studeyang.tech/2023/13.html</id>
    <published>2023-06-19T01:00:00.000Z</published>
    <updated>2023-07-10T07:01:59.451Z</updated>
    
    
    <summary type="html">最近由于一行单元测试代码没有写 Assert 断言，导致了项目在 CI 过程中没有通过，于是遭到了某位同事的吐槽，在修改我的代码后写上了一句提交信息。我想，做为技术人，修改这条 Commit 信息还是不难的，于是我通过本文介绍的技巧完成了修改。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="Git" scheme="https://studeyang.tech/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>图解CORS</title>
    <link href="https://studeyang.tech/2023/12.html"/>
    <id>https://studeyang.tech/2023/12.html</id>
    <published>2023-06-14T01:00:00.000Z</published>
    <updated>2023-07-10T07:01:59.446Z</updated>
    
    
    <summary type="html">CORS 的全称是 Cross-origin resource sharing，中文名称是跨域资源共享，是一种让受限资源能够被其他域名的页面访问的一种机制。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="HTTP" scheme="https://studeyang.tech/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>架构设计应顺应技术的生命周期</title>
    <link href="https://studeyang.tech/2023/11.html"/>
    <id>https://studeyang.tech/2023/11.html</id>
    <published>2023-06-08T01:00:00.000Z</published>
    <updated>2023-06-17T01:26:43.991Z</updated>
    
    
    <summary type="html">我们作为架构师，如果看不清技术的生命周期，那么所设计的架构就没法儿向更有生命力的新技术借力，自己的职业生涯也会受限。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="架构" scheme="https://studeyang.tech/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>23种设计模式的必备结构图</title>
    <link href="https://studeyang.tech/2023/10.html"/>
    <id>https://studeyang.tech/2023/10.html</id>
    <published>2023-05-13T01:00:00.000Z</published>
    <updated>2023-06-17T01:16:34.536Z</updated>
    
    
    <summary type="html">这里总结了23种设计模式的结构图及定义。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="设计模式" scheme="https://studeyang.tech/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>06期：使用 OPTIMIZER_TRACE 窥探 MySQL 索引选择的秘密</title>
    <link href="https://studeyang.tech/2023/9.html"/>
    <id>https://studeyang.tech/2023/9.html</id>
    <published>2023-04-18T01:00:00.000Z</published>
    <updated>2023-06-17T01:17:30.682Z</updated>
    
    
    <summary type="html">优化查询语句的性能是 MySQL 数据库管理中的一个重要方面。在优化查询性能时，选择正确的索引对于减少查询的响应时间和提高系统性能至关重要。但是，如何确定 MySQL 的索引选择策略？MySQL 的优化器是如何选择索引的？</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="MySQL" scheme="https://studeyang.tech/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>索引失效了？看看这几个常见的原因！</title>
    <link href="https://studeyang.tech/2023/8.html"/>
    <id>https://studeyang.tech/2023/8.html</id>
    <published>2023-04-16T01:00:00.000Z</published>
    <updated>2023-06-17T01:18:04.762Z</updated>
    
    
    <summary type="html">索引是 MySQL 数据库中优化查询性能的重要工具，通过对查询条件和表数据的索引，MySQL可以快速定位数据，提高查询效率。但是，在实际的数据库开发和维护中，我们经常会遇到一些情况，导致索引失效，从而使得查询变得非常缓慢，甚至无法使用索引来优化查询，这会严重影响系统的性能。那么，是什么原因导致了索引失效呢？</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="MySQL" scheme="https://studeyang.tech/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>05期：面向业务的消息服务落地实践</title>
    <link href="https://studeyang.tech/2023/7.html"/>
    <id>https://studeyang.tech/2023/7.html</id>
    <published>2023-03-25T01:00:00.000Z</published>
    <updated>2023-06-17T01:18:47.651Z</updated>
    
    
    <summary type="html">传统的消息队列对业务方提出了更高的要求，我们期望提供的是一种以业务为重心的，面向服务的解决方案。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="Kafka" scheme="https://studeyang.tech/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>04期：领域驱动设计与微服务</title>
    <link href="https://studeyang.tech/2023/6.html"/>
    <id>https://studeyang.tech/2023/6.html</id>
    <published>2023-03-19T01:00:00.000Z</published>
    <updated>2023-06-17T01:19:49.522Z</updated>
    
    
    <summary type="html">随着微服务的兴起，你一定听说过领域驱动设计 DDD（domain-driven design），但是如果把它当成一个术语来看，似乎有点抽象。这到底是个什么玩意？</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="DDD" scheme="https://studeyang.tech/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>学习分享（第3期）：你所理解的架构是什么？</title>
    <link href="https://studeyang.tech/2023/5.html"/>
    <id>https://studeyang.tech/2023/5.html</id>
    <published>2023-03-05T01:00:00.000Z</published>
    <updated>2023-06-17T01:20:23.757Z</updated>
    
    
    <summary type="html">浅谈应用架构、业务架构、技术架构。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="架构" scheme="https://studeyang.tech/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>学习分享（第 2 期）：从源码层面看 Redis 节省内存的设计</title>
    <link href="https://studeyang.tech/2023/4.html"/>
    <id>https://studeyang.tech/2023/4.html</id>
    <published>2023-02-18T01:00:00.000Z</published>
    <updated>2023-06-17T01:21:25.308Z</updated>
    
    
    <summary type="html">虽然我们在使用 String 类型后，占用了较多内存，但其实 Redis 是对 SDS 做了节省内存设计的。除此之外，Redis 在其他方面也都考虑了内存开销，今天我们就从源码层面来看看都做了哪些节省内存的设计。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="Redis" scheme="https://studeyang.tech/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>学习分享（第 1 期）之 Redis：巧用 Hash 类型节省内存</title>
    <link href="https://studeyang.tech/2023/3.html"/>
    <id>https://studeyang.tech/2023/3.html</id>
    <published>2023-02-05T01:00:00.000Z</published>
    <updated>2023-06-17T01:22:30.042Z</updated>
    
    
    <summary type="html">既然 String 类型这么占内存，那么你有好的方案来节省内存吗？</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="Redis" scheme="https://studeyang.tech/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>架构师应具备什么能力？</title>
    <link href="https://studeyang.tech/2023/1.html"/>
    <id>https://studeyang.tech/2023/1.html</id>
    <published>2023-01-07T01:00:00.000Z</published>
    <updated>2023-06-17T01:25:31.363Z</updated>
    
    
    <summary type="html">软件技术其实就是与“复杂度”作斗争的，架构的出现也不例外。简而言之，架构也是为了应对软件系统复杂度而提出的一个解决方案，通过回顾架构产生的历史背景和原因，我们可以基本推导出答案：架构设计的主要目的是为了解决软件系统复杂度带来的问题。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="架构" scheme="https://studeyang.tech/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Redis String类型的内存开销都花在哪儿了？</title>
    <link href="https://studeyang.tech/2023/2.html"/>
    <id>https://studeyang.tech/2023/2.html</id>
    <published>2023-01-07T01:00:00.000Z</published>
    <updated>2023-06-17T01:25:03.439Z</updated>
    
    
    <summary type="html">Redis String类型存储了很多元数据信息，这些信息会提高该数据类型整体内存占用。</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="Redis" scheme="https://studeyang.tech/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis高可用之 Sentinel 机制实现细节</title>
    <link href="https://studeyang.tech/2022/14.html"/>
    <id>https://studeyang.tech/2022/14.html</id>
    <published>2022-12-20T01:00:00.000Z</published>
    <updated>2023-06-07T09:42:05.804Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文来自我的 technotes [1] Redis篇。&lt;/p&gt;</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="Redis" scheme="https://studeyang.tech/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>(byte)1658385462vv16=-40，怎么算的？</title>
    <link href="https://studeyang.tech/2022/15.html"/>
    <id>https://studeyang.tech/2022/15.html</id>
    <published>2022-12-20T01:00:00.000Z</published>
    <updated>2023-06-07T09:42:05.806Z</updated>
    
    
    <summary type="html">&lt;p&gt;在 Github 项目&lt;code&gt;mongo-java-driver&lt;/code&gt;有一个类&lt;code&gt;ObjectId.java&lt;/code&gt;，它的作用是生成唯一 id 的，它的核心实现是下面这样一段代码 [1]：&lt;/p&gt;</summary>
    
    
    
    <category term="technotes" scheme="https://studeyang.tech/categories/technotes/"/>
    
    
    <category term="计算机基础" scheme="https://studeyang.tech/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
